{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-types.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","utils/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/LoaderComponent/LoaderComponent.js","components/ContactForm/ContactForm.js","utils/motionVar.js","components/Filter/Filter.js","img/error.jpg","components/Error/Error.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Error/Error.module.css","components/Container/Container.module.css","components/LoaderComponent/LoaderComponent.module.css"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","items","createReducer","_","payload","state","filter","id","isLoading","error","combineReducers","store","configureStore","reducer","contacts","contactsReducer","Container","children","className","s","container","axios","defaults","baseURL","fetchContacts","dispatch","get","then","data","catch","addContact","name","number","contact","post","contactsAPI","deleteContact","delete","getContacts","getLoading","getError","getFilter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","LoaderComponent","overlay","type","color","height","width","timeout","ContactForm","useDispatch","useSelector","contactsSelectors","useState","setName","setNumber","handleChange","e","target","value","resetInput","form","onSubmit","preventDefault","find","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","test","checkValidNumber","toast","info","label","input","onChange","placeholder","options","delimiter","blocks","btn","variants","initial","scale","animate","exit","transition","ease","duration","Filter","length","AnimatePresence","motion","contactsActions","ErrorView","message","div","role","wrapper","src","errorImage","alt","text","ContactList","visibleContacts","useEffect","contactsOperations","ul","list","map","li","item","onClick","p","Error","App","autoClose","position","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ae4c8d3a.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\nimport {\n  FETCH_CONTACTS_REQUEST,\n  FETCH_CONTACTS_SUCCESS,\n  FETCH_CONTACTS_ERROR,\n  ADD_CONTACT_REQUEST,\n  ADD_CONTACT_SUCCESS,\n  ADD_CONTACT_ERROR,\n  DELETE_CONTACT_REQUEST,\n  DELETE_CONTACT_SUCCESS,\n  DELETE_CONTACT_ERROR,\n  FILTER_CONTACT,\n} from './contacts-types';\n\nexport const fetchContactsRequest = createAction(FETCH_CONTACTS_REQUEST);\nexport const fetchContactsSuccess = createAction(FETCH_CONTACTS_SUCCESS);\nexport const fetchContactsError = createAction(FETCH_CONTACTS_ERROR);\n\nexport const addContactRequest = createAction(ADD_CONTACT_REQUEST);\nexport const addContactSuccess = createAction(ADD_CONTACT_SUCCESS);\nexport const addContactError = createAction(ADD_CONTACT_ERROR);\n\nexport const deleteContactRequest = createAction(DELETE_CONTACT_REQUEST);\nexport const deleteContactSuccess = createAction(DELETE_CONTACT_SUCCESS);\nexport const deleteContactError = createAction(DELETE_CONTACT_ERROR);\n\nexport const filterContact = createAction(FILTER_CONTACT);\n","export const FETCH_CONTACTS_REQUEST = 'contacts/fetchContactsRequest';\nexport const FETCH_CONTACTS_SUCCESS = 'contacts/fetchContactsSuccess';\nexport const FETCH_CONTACTS_ERROR = 'contacts/fetchContactsError';\n\nexport const ADD_CONTACT_REQUEST = 'contacts/addContactRequest';\nexport const ADD_CONTACT_SUCCESS = 'contacts/addContactSuccess';\nexport const ADD_CONTACT_ERROR = 'contacts/addContactError';\n\nexport const DELETE_CONTACT_REQUEST = 'contacts/deleteContactRequest';\nexport const DELETE_CONTACT_SUCCESS = 'contacts/deleteContactSuccess';\nexport const DELETE_CONTACT_ERROR = 'contacts/deleteContactError';\n\nexport const FILTER_CONTACT = 'contacts/filter';\n","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContact,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst isLoading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [filterContact]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {\n  [fetchContactsError]: (_, { payload }) => payload,\n  [addContactError]: (_, { payload }) => payload,\n  [deleteContactError]: (_, { payload }) => payload,\n  [fetchContactsRequest]: () => null,\n  [addContactRequest]: () => null,\n  [deleteContactRequest]: () => null,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  isLoading,\n  error,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport contactsReducer from './contacts/contacts-reducer';\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nexport function fetchContacts() {\n  return axios.get('/contacts');\n}\n\nexport function addContact(contact) {\n  return axios.post('/contacts', contact);\n}\n\nexport function deleteContact(id) {\n  return axios.delete(`/contacts/${id}`);\n}\n","import {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\nimport * as contactsAPI from '../../utils/contacts-api';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  contactsAPI\n    .fetchContacts()\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  contactsAPI\n    .addContact(contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = id => dispatch => {\n  dispatch(deleteContactRequest());\n\n  contactsAPI\n    .deleteContact(id)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport s from './LoaderComponent.module.css';\n\nfunction LoaderComponent() {\n  return (\n    <div className={s.overlay}>\n      <Loader\n              type=\"Circles\"\n              color=\"#770007\"\n              height={50}\n              width={100}\n              timeout={2000} \n            />\n    </div>\n  );\n}\n\nexport default LoaderComponent;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsSelectors } from '../../redux/contacts';\nimport Cleave from 'cleave.js/react';\nimport { toast } from 'react-toastify';\nimport LoaderComponent from '../LoaderComponent';\nimport s from './ContactForm.module.css';\n\n\nfunction ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = name => {\n    return contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n  };\n\n  const checkRepeatNumber = number => {\n    return contacts.find(contact => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === '' || number.trim() === '';\n  };\n\n  const checkValidNumber = number => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      toast(`${name} is already in the phonebook.`);\n    } else if (checkRepeatNumber(number)) {\n      toast(`${number} is already in the phonebook.`);\n    } else if (checkEmptyQuery(name, number)) {\n      toast.info(\"Enter the contact's name and number phone!\");\n    } else if (checkValidNumber(number)) {\n      toast.error('Enter the correct number phone!');\n    } else {\n      //dispatch (addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter name\"\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <Cleave\n          options={{ delimiter: '-', blocks: [3, 2, 2] }}\n          placeholder=\"Enter number\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      {!isLoading && (\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n      )}\n      {isLoading && <LoaderComponent />}\n    </form>\n    </>\n  );\n}\n\nexport default ContactForm;\n","export const variants = {\n  initial: { scale: 0 },\n  animate: { scale: 1 },\n  exit: { scale: 0 },\n  transition: { ease: 'easeOut', duration: 0.3 },\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../utils/motionVar';\nimport s from './Filter.module.css';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const error = useSelector(contactsSelectors.getError);\n\n  return (\n    <>\n      {contacts.length > 0 && !error && (\n        <AnimatePresence>\n          <label className={s.label}>\n            <motion.input\n              initial=\"initial\"\n              animate=\"animate\"\n              exit=\"exit\"\n              transition=\"transition\"\n              variants={variants}\n              className={s.input}\n              type=\"text\"\n              value={filter}\n              onChange={e =>\n                dispatch(contactsActions.filterContact(e.target.value))\n              }\n            />\n          </label>\n        </AnimatePresence>\n      )}\n    </>\n  );\n}\n\nexport default Filter;\n","export default __webpack_public_path__ + \"static/media/error.a28f3ecb.jpg\";","import { motion, AnimatePresence } from 'framer-motion';\nimport PropTypes from 'prop-types';\nimport errorImage from '../../img/error.jpg';\nimport s from './Error.module.css';\n\nfunction ErrorView({ message }) {\n  return (\n    <AnimatePresence>\n      <motion.div\n        role=\"alert\"\n        className={s.wrapper}\n        initial={{ scale: 0 }}\n        animate={{ scale: 1 }}\n        exit={{ scale: 0 }}\n        transition={{ ease: 'easeOut', duration: 0.3 }}\n      >\n        <img src={errorImage} width=\"300\" alt=\"Sad PC\" />\n        <p text={message} className={s.text}>\n          {message}\n        </p>\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n\nErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ErrorView;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { variants } from '../../utils/motionVar';\nimport Error from '../Error';\nimport s from './ContactList.module.css';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const isLoading = useSelector(contactsSelectors.getLoading);\n  const error = useSelector(contactsSelectors.getError);\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n\n  return (\n    <>\n      {contacts.length > 0 && !error && (\n        <motion.ul className={s.list}>\n          <AnimatePresence>\n            {visibleContacts.map(({ id, name, number }) => (\n              <motion.li\n                className={s.item}\n                key={id}\n                initial=\"initial\"\n                animate=\"animate\"\n                exit=\"exit\"\n                transition=\"transition\"\n                variants={variants}\n              >\n                <p className={s.info}>\n                  <b>{name}</b>\n                  <em>{number}</em>\n                </p>\n                <button\n                  className={s.btn}\n                  type=\"button\"\n                  onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                >\n            \n                </button>\n              </motion.li>\n            ))}\n          </AnimatePresence>\n        </motion.ul>\n      )}\n\n      {!contacts.length && !error && !isLoading && (\n        <AnimatePresence>\n          <motion.p\n            initial=\"initial\"\n            animate=\"animate\"\n            exit=\"exit\"\n            transition=\"transition\"\n            variants={variants}\n          >\n            Your phonebook is empty. Please add contact.\n          </motion.p>\n        </AnimatePresence>\n      )}\n\n      {error && <Error message={error.message} />}\n    </>\n  );\n}\n\nexport default ContactList;\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nfunction App() {\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n      <ToastContainer autoClose={3700} position=\"top-center\" />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3eN9w\",\"label\":\"ContactForm_label__v2NL_\",\"input\":\"ContactForm_input__3NFi8\",\"btn\":\"ContactForm_btn__3rKjW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__FEd-O\",\"item\":\"ContactList_item__2y35w\",\"btn\":\"ContactList_btn__-iz41\",\"info\":\"ContactList_info__kE_cK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2C_-r\",\"input\":\"Filter_input__zOcDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error_wrapper__27D0w\",\"img\":\"Error_img__2GOGf\",\"text\":\"Error_text__aoPzw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3O00E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"LoaderComponent_overlay__2qz75\"};"],"sourceRoot":""}